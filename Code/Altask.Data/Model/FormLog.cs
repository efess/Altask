//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Altask.Data.Model
{
    using Altask.Data;
    using Newtonsoft.Json;
    using System;
    using System.Xml;
    using System;
    using System.Collections.Generic;
    
    public partial class FormLog : ISupportsLongId, ISupportsAuthorFields
    {
    	/// <summary>
    	/// Gets or sets the Id of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public long Id { get; set; }
    	/// <summary>
    	/// Gets or sets the FormId of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public int FormId { get; set; }
    	/// <summary>
    	/// Gets or sets the Type of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string Type { get; set; }
    	/// <summary>
    	/// Gets or sets the Description of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string Description { get; set; }
    	/// <summary>
    	/// Gets or sets the BeforeModel of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string BeforeModel { get; set; }
    	/// <summary>
    	/// Gets or sets the BeforeVersion of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string BeforeVersion { get; set; }
    	/// <summary>
    	/// Gets or sets the AfterModel of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string AfterModel { get; set; }
    	/// <summary>
    	/// Gets or sets the AfterVersion of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string AfterVersion { get; set; }
    	/// <summary>
    	/// Gets or sets the CreatedBy of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string CreatedBy { get; set; }
    	/// <summary>
    	/// Gets or sets the CreatedOn of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public System.DateTime CreatedOn { get; set; }
    	/// <summary>
    	/// Gets or sets the UpdatedBy of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public string UpdatedBy { get; set; }
    	/// <summary>
    	/// Gets or sets the UpdatedOn of this <see cref='Altask.Data.Model.FormLog'/>.
    	/// </summary>
        public System.DateTime UpdatedOn { get; set; }
    }
    
    public static partial class Mapper {
    	/// <summary>
    	/// Maps a <see cref='Altask.Data.Model.FormLog'/> object to a <see cref='Altask.Data.Dto.FormLog'/> object.
    	/// </summary>
    	/// <param name="includeLogs">Indicates whether to load any logs associated with the object when mapping.</param>
    	public static Altask.Data.Dto.FormLog ToDto(this Altask.Data.Model.FormLog entity, bool includeLogs = false) {
    		var dto = new Altask.Data.Dto.FormLog();
    		dto.Id = entity.Id;
    		dto.FormId = entity.FormId;
    		dto.Type = entity.Type;
    		dto.Description = entity.Description;
    		dto.BeforeModel = entity.BeforeModel;
    		dto.BeforeVersion = entity.BeforeVersion;
    		dto.AfterModel = entity.AfterModel;
    		dto.AfterVersion = entity.AfterVersion;
    		dto.CreatedBy = entity.CreatedBy;
    		dto.CreatedOn = entity.CreatedOn;
    		dto.UpdatedBy = entity.UpdatedBy;
    		dto.UpdatedOn = entity.UpdatedOn;
    
    		return dto;
    	}
    
    	/// <summary>
    	/// Maps all the non-primary key and tracking properties of a <see cref='Altask.Data.Dto.FormLog'/> object to a <see cref='Altask.Data.Model.FormLog'/> object.
    	/// </summary>
    	public static Altask.Data.Model.FormLog FromDto(this Altask.Data.Model.FormLog model, Altask.Data.Dto.FormLog entity) {
    		model.FormId = entity.FormId;
    		model.Type = entity.Type;
    		model.Description = entity.Description;
    		model.BeforeModel = entity.BeforeModel;
    		model.BeforeVersion = entity.BeforeVersion;
    		model.AfterModel = entity.AfterModel;
    		model.AfterVersion = entity.AfterVersion;
    		return model;
    	}
    }
}
